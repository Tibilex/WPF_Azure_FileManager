<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region  Colors -->
    <SolidColorBrush x:Key="Color.Background.Main" Color="#1b1c31"/>
    <SolidColorBrush x:Key="Color.Gray" Color="#6f767e"/>
    <SolidColorBrush x:Key="Color.Gray2" Color="#383b3f"/>
    <SolidColorBrush x:Key="Color.Red" Color="#d5414f"/>
    <LinearGradientBrush x:Key="Color.Gradient.Blue" StartPoint="0.4,1" EndPoint="1,0">
        <GradientStop Color="#39a6ff" Offset="0"/>
        <GradientStop Color="#1954ae" Offset="1"/>
    </LinearGradientBrush>
    <!--#endregion-->

    <!--#region  Resources -->
    <Image x:Key="MinimizeIcon" Source="/Resource/Minimize.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="MinimizeIcon2" Source="/Resource/MinimizeGray.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="CloseIcon" Source="/Resource/Close.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="CloseIcon2" Source="/Resource/CloseGray.png" RenderOptions.BitmapScalingMode="Fant"/>
    <FontFamily x:Key="Montserrat">pack://application:,,,/Fonts/#montserrat</FontFamily>
    <!--#endregion -->

    <!--#region  Grids -->
    <Style x:Key="MainGrid" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource Color.Background.Main}"/>
    </Style>
    <Style x:Key="HeaderGrid" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource Color.Background.Main}"/>
    </Style>
    <Style x:Key="RightMenuStackPanel" TargetType="StackPanel">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    <!--#endregion -->

    <!--#region  Borders -->
    <Style x:Key="ZoningBorder" TargetType="Border">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Color.Gray}"/>
    </Style>
    <!--#endregion -->

    <!--#region  Buttons -->
    <Style x:Key="MinimizeButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Color.Background.Main}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Content" Value="{StaticResource MinimizeIcon2}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#12aa92"/>
                            <Setter Property="Content"  Value="{StaticResource MinimizeIcon}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Color.Background.Main}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Content" Value="{StaticResource CloseIcon2}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Color.Red}"/>
                            <Setter Property="Content"  Value="{StaticResource CloseIcon}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Color.Gradient.Blue}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontFamily" Value="{DynamicResource Montserrat}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="black" BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="0">
                        
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                        Duration="0:0:0.100" To="5 5 5 5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                        Duration="0:0:0.100" To="0 5 0 5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Color.Gray}"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Color.Gray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion -->

    <!--#region  TextBlocks -->
    <Style x:Key="MainTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="AliceBlue"/>
        <Setter Property="FontFamily" Value="{StaticResource Montserrat}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10, 0, 0,0"/>
    </Style>
    <Style x:Key="InputTextBox" TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0, 0, 0, 5"/>
        <Setter Property="Padding" Value="5 0 0 0"/>
        <Setter Property="Height" Value="30px"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{DynamicResource Montserrat}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource Color.Gray}"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="CaretBrush" Value="#ffffff"/>
    </Style>
    <!--#endregion -->

    <!--#region  ListBoxes -->
    <Style x:Key="FileListBox" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="FontFamily" Value="{StaticResource Montserrat}"/>
        <Setter Property="Margin" Value="10 2 10 0"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="0 0 0 1">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Color.Gray}"/>
                            <Setter Property="Foreground"  Value="{StaticResource Color.Red}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Color.Gray}"/>
                            <Setter Property="Foreground"  Value="{StaticResource Color.Red}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion -->

</ResourceDictionary>